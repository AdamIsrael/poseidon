{"name":"Poseidon","tagline":"Python CLI for Digital Ocean API v2","body":"poseidon\r\n========\r\n\r\nPython library for managing your Digital Ocean account via API v2\r\n\r\nThe DigitalOcean API allows you to manage Droplets and resources within the\r\nDigitalOcean cloud in a simple, programmatic way using conventional HTTP\r\nrequests. The endpoints are intuitive and powerful, allowing you to easily make\r\ncalls to retrieve information or to execute actions.\r\n\r\nAll of the functionality that you are familiar with in the DigitalOcean control\r\npanel is also available through the API, allowing you to script the complex\r\nactions that your situation requires.\r\n\r\nThis library starts with a python wrapper for the API and aims to build tools to\r\nmake it easier to manage, provision, and deploy to Digital Ocean.\r\n\r\n\r\nSetup\r\n-----\r\n`pip install -U poseidon`\r\n\r\nTo run the unit tests make sure you have the `pytest` module.\r\nIf not, run `pip install -U pytest`\r\n\r\n\r\nExamples\r\n--------\r\nSetup authentication by generating an API key and exporting it as the value of the\r\n`DIGITALOCEAN_API_KEY` environment variable.\r\n\r\n\r\n### Connect to API\r\n```\r\nimport poseidon.api as po\r\nclient = po.connect() # or po.connect(api_key=<KEY>) for custom api key\r\n```\r\n\r\n### Create a droplet\r\n```\r\nimage_id = 135123 # replace with your own\r\ndroplet = client.droplets.create(name='test', region='sfo1', size='512mb',\r\n                                 image=image_id)\r\n```\r\n\r\n### Programmatically create a snapshot\r\n```\r\ndroplet.power_off() # snapshots are only allowed while powered off\r\ndroplet.take_snapshot('test-snapshot')\r\n```\r\n\r\n### Check that it worked\r\n```\r\nsnapshots = droplet.snapshots() # one of these should be named 'test-snapshot'\r\n```\r\n\r\n### Other simple droplet commands\r\n```\r\ndroplet.reboot()\r\ndroplet.shutdown()\r\ndroplet.power_on()\r\ndroplet.power_cycle()\r\ndroplet.password_reset()\r\ndroplet.enable_ipv6()\r\ndroplet.disable_backups()\r\ndroplet.enable_private_networking()\r\n```\r\n\r\n### Droplet commands that take a parameter\r\n```\r\ndroplet.resize('1024mb')\r\ndroplet.restore(image_id) # integer\r\ndroplet.rebuild(image_id)\r\ndroplet.rename('new-name')\r\ndroplet.change_kernel(12534)\r\n```\r\n\r\n### Delete droplet\r\n`droplet.delete()`\r\n\r\n### Keys\r\n```\r\n# list keys\r\nclient.keys.list() # it works\r\n\r\n# create a new key\r\npublic_key = (\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAQQDWF7SdoK0JvdjGR/8MHjj\"\r\n              \"b7qtKVSdqoVZ2bCX0SXdn2pxZitnFjUx+lQ4osMGjOOTE/Hi86qQnFGE8Ym\"\r\n              \"Sur/LT example\")\r\nkey = client.keys.create('test-key', public_key)\r\nprint rs['public_key']\r\nprint rs['name']\r\n\r\n# rename the key\r\nclient.keys.update(key['id'], 'test-key2')\r\n\r\n# delete the key\r\nclient.keys.delete(new_id)\r\n```\r\n\r\n### Domains\r\n```\r\n# list domains\r\nclient.domains.list() # it works\r\n\r\n# create new domain\r\nip_address = '127.0.0.1'\r\ntest = 'b7qtKVSdqoVZ2bCX0SXdn2pxZitnFjUx.com' # must be unique\r\ndomain = client.domains.create(test, ip_address)\r\nprint domain['name']\r\n\r\n# retrieve a domain by name\r\nnew_domain = client.domains.get(domain['name'])\r\n\r\n# delete a domain by name\r\nclient.domains.delete(new_domain['name'])\r\n```\r\n\r\n### Regions\r\n`client.regions.list()`\r\n### Sizes\r\n`client.sizes.list()`\r\n\r\n\r\nTesting\r\n-------\r\n```\r\npip install -U pytest\r\npy.test\r\n```\r\n\r\nBecause the test for droplets goes through the exercise of creating a new droplet,\r\nmodifying it, then finally destroying it, the test takes a long time to run.\r\nTo only run the other tests, use the `not slow` marker from `pytest`:\r\n\r\n```\r\n~$ py.test -v -m \"not slow\"\r\n===================================== test session starts ======================================\r\nplatform linux2 -- Python 2.7.6 -- py-1.4.23 -- pytest-2.6.0 --\r\ncollected 8 items\r\n\r\ntests/test_api.py@72::test_regions PASSED\r\ntests/test_api.py@82::test_sizes PASSED\r\ntests/test_api.py@92::test_actions PASSED\r\ntests/test_api.py@101::test_keys PASSED\r\ntests/test_api.py@122::test_domains PASSED\r\ntests/test_api.py@141::test_domain_records PASSED\r\ntests/test_api.py@145::test_images PASSED\r\n\r\n============================ 1 tests deselected by \"-m 'not slow'\" =============================\r\n============================ 7 passed, 1 deselected in 6.85 seconds ============================\r\n```\r\n\r\nTODO\r\n----\r\n1. Refactor the result format to allow for easy multipage resultset paging\r\n2. Additional unit tests\r\n3. Tools for scaling, provisioning, deployment\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}